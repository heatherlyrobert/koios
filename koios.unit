#23456789-12  123456789-123456789-123456789-12345  123456789-123456  123456789-123456789-  123456789-  123456789-123456789-  123456789- 
#==(verb)===  ===========(description)===========  =====(function)=  ====(arguments)=====  ==(test)==  ====(results)=======  =(var)==== 
PREP          global function headers             
  incl        fake header                          koios.h           
SECT          simple testing                      
SCRP    [ê1]  (SCRP) verify openning and closing                    
  COND        simple openning                     
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
  COND   (1)  defensive checks                    
    load      ... prep data for read               stdin             one two three                                                   
    get       ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
  DITTO  (1)  - - - - - - - - - - - - - - - - - - 
  COND        small condition                     
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
  DITTO  (1)  - - - - - - - - - - - - - - - - - - 
  COND        duplicate opens and closes          
    local     ... working variables                - - - - - - - -   int c = 0;                                                      
    echo      ... check working variable           - - - - - - - -   c                         i_equal     0                     
    load      ... prep data for read               stdin             one two three                                                   
    mode      FORCED_FAIL                         
    system    ... run little                       - - - - - - - -   /bin/false                                                      
SECT          more complex testing                
SHARED   -a-  prepare files for use               
  COND        script input file                   
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    mode      normal                              
  COND        code output file                    
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
SHARED   -b-  remove files after use              
  COND        code output file                    
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
  COND        close and delete code file          
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
SCRP    [ê2]  (SCRP) verify system startup                          
  COND        run initialization                  
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    mode      FORCED_FAIL                         
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
  REUSE  -a-  - - - - - - - - - - - - - - - - -   
  COND        parse a code record                 
    local     ... create string                    - - - - - - - -   char  x_str [100];                                              
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                  x_str  
    echo      ... verify string                    - - - - - - - -   x_str                     s_equal     hello                 
    local     ... create number                    - - - - - - - -   float x_real = 0.0;                                             
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                   x_real 
    echo      ... verify number                    - - - - - - - -   x_real                    r_lesser    16.0                  
    local     ... create integer                   - - - - - - - -   int   x_int  = 0;                                               
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                      x_int  
    echo      ... verify integer                   - - - - - - - -   x_int                     i_equal     2                     
    local     ... create character                 - - - - - - - -   char  x_char = 0;                                               
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                    x_char 
    echo      ... verify character                 - - - - - - - -   x_char                    i_equal     'A'                   
    local     ... create pointer                   - - - - - - - -   int  *x_ptr  = NULL;                                            
    exec      ... check pointer                    yUNIT_testptr                               p_exists    0                      x_ptr  
    echo      ... verify pointer                   - - - - - - - -   x_ptr                     p_exists    0                     
    echo      ... verify value at pointer          - - - - - - - -   (x_ptr) ? *x_ptr : 0      i_equal     42                    
SCRP    [ì2]  (SCRP) verify normal processing                       
  GROUP       round one                           
  COND   (1)  process arguments                   
    exec      ... check string                     yUNIT_teststring  0                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    5                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     32                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    65                        i_equal     'A'                   
  REUSE  -a-  - - - - - - - - - - - - - - - - -   
  COND   (2)  read one record                     
    exec      ... check string                     yUNIT_teststring  1                         s_equal     hello                 
    exec      ... check number                     yUNIT_testreal    2                         r_greater   15.0                  
    exec      ... check integer                    yUNIT_testint     64                        i_equal     2                     
    exec      ... check character                  yUNIT_testchar    87                        i_equal     'A'                   
  GROUP       round two                           
  DITTO  (1)  - - - - - - - - - - - - - - - - -   
  REUSE  -b-  - - - - - - - - - - - - - - - - -   
  GROUP       final round                         
  DITTO  (2)  - - - - - - - - - - - - - - - - -   
  REUSE  -D-  - - - - - - - - - - - - - - - - -   
  DITTO  (1)  - - - - - - - - - - - - - - - - -   
SCRP    [è9]  (SCRP) empty script                                   
